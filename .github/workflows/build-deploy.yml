name: Build and Deploy Code

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.ACCESS_TOKEN_EXPIRE_MINUTES }}

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Upgrade pip
        run: |
          python -m pip install --upgrade pip
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      
      - name: Run tests
        run: |
          pip install pytest
          PYTHONPATH=. pytest
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v2
      
      # - name: Build and push Docker image
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: true
      #     tags: myapp:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: deploying stuff
        run: echo "Deploying to server..."

      # - name: Checkout code
      #   uses: actions/checkout@v2

      # - name: Deploy to server
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      #     SSH_HOST: ${{ secrets.SSH_HOST }}
      #     SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
      #   run: |
      #     echo "$SSH_PRIVATE_KEY" > private_key.pem
      #     chmod 600 private_key.pem
      #     scp -i private_key.pem -o StrictHostKeyChecking=no -r . $SSH_USERNAME@$SSH_HOST:/path/to/deploy/
      #     ssh -i private_key.pem -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST 'cd /path/to/deploy && docker-compose up -d'
